package lab3_3;

import java.util.PriorityQueue;
import java.util.Scanner;

public class Driver {
	
	public static void main(String[] args){
	
		Scanner input = new Scanner(System.in);
		int n = input.nextInt();
		int m = input.nextInt();
		
		Graph graph = new Graph(n,m);
		
		for(int i=0;i<m;i++){
			graph.addWeightedUndirectedEdge(input.nextInt(), input.nextInt(), input.nextInt());
		}
		graph.getNode(0).setMinPath(0);
		
		PriorityQueue<Node> pQueue = new PriorityQueue<Node>();
		for(int i=0;i<n;i++){
			pQueue.add(graph.getNode(i));
		}
		
		Node temp;
		while(true){
			temp = pQueue.poll();
			if(temp.getMinPath() == Integer.MAX_VALUE){
				break;
			}
			temp.setVisitStatus(1);
			for(Edge adjEdge: graph.getAdjacentEdges(temp.getIndex())){
				
			}
		}
		
	}
	
}
