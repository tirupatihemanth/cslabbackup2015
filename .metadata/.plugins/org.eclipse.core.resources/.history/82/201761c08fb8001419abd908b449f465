import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.ListIterator;
import java.util.Scanner;


public class KruskalsDriver {

	public static void main(String[] args){
		
		int cost;
		Scanner input = null;
		try {
			input = new Scanner(new FileInputStream(
					System.getProperty("user.dir") + "/input.txt"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		cost = input.nextInt();
		ArrayList<Integer> alist = new ArrayList<Integer>();

		int n = Integer.MIN_VALUE, temp;
		while (input.hasNext()) {
			temp = input.nextInt() - 1;
			alist.add(temp);
			n = n < temp ? temp : n;
			temp = input.nextInt() - 1;
			alist.add(temp);
			n = n < temp ? temp : n;
			alist.add(input.nextInt());
		}

		n++;
		int m = alist.size() / 3;
		
		ListIterator<Integer> listiterator = alist.listIterator();
		Node[] nodes = new Node[n];
		boolean[] nodeStatus = new boolean[n];
		ArrayList<Edge> edges = new ArrayList<Edge>();
		for(int i=0;i<n;i++){
			nodes[i] = new Node(i);
			nodeStatus[i] = false;
		}
		
		for(int i=0;i<m;i++){
			edges.add(new Edge(nodes[listiterator.next()-1], nodes[listiterator.next()-1], listiterator.next()));
		}
		edges.sort(null);
		for(Edge edge: edges){
			if(!nodeStatus[edge.getFirstNode().getIndex()]){
				edge.setPresent(1);
				nodeStatus[edge.getFirstNode().getIndex()] = true;
			}
			else if(!nodeS)
		}
	}
}
