package cs13b027_lab8_1;

import java.util.Scanner;

public class FordFulkerson {

	public static void main(String[] args){
		
		int n, m;
		Scanner input = new Scanner(System.in);
		n = input.nextInt();
		m = input.nextInt();
		Graph graph = new Graph(n, m);
		Graph residualGraph = new Graph(n,m);
		int nodeIdx1, nodeIdx2, capacity;
		boolean stat;
		for(int i=0;i<m;i++){
			stat = false;
			 nodeIdx1 = input.nextInt();
			 nodeIdx2 = input.nextInt();
			 capacity = input.nextInt();
			 for(Edge edge: graph.getAdjacentEdges(nodeIdx2)){
				 if(edge.getSecondNode().getIndex() == nodeIdx1){
					 Node node = new Node(graph.getAdjacencyList().size());
					 n++;
					 graph.addEdge(nodeIdx1, node.getIndex(), capacity);
					 residualGraph.addUndirectedEdge(nodeIdx1, nodeIdx2, capacity);
					 graph.addEdge(node.getIndex(), nodeIdx2, capacity);
					 m+=2;
					 stat = true;
					 break;
				 }
			 }
			 if(!stat){
				 graph.addEdge(nodeIdx1, nodeIdx2, capacity); 
			 }
		}
	}
}
